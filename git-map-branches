#!/usr/bin/env python

import gitutils

import argparse
import sys

NO_UPSTREAM = "{NO_UPSTREAM}"

def colorprint(text, color, bold, no_color):
    if not sys.stdout.isatty() or no_color:
        print text
        return

    attr = []
    if color == "red":
        attr.append("31")
    elif color == "cyan":
        attr.append("36")
    elif color == "purple":
        attr.append("35")
    else: # Default to green
        attr.append("32")

    if bold:
        attr.append("1")

    print "\x1b[%sm%s\x1b[0m" % (";".join(attr), text)

def visit(branch, indent, all_branches, upstreams, current_branch, no_color):
    if branch == current_branch:
        colorprint("%s%s *" % (indent, branch), "cyan", True, no_color)
    elif upstreams[branch] == None:
        if branch == NO_UPSTREAM:
            colorprint("%s%s" % (indent, branch), "purple", False, no_color)
        else:
            colorprint("%s%s" % (indent, branch), "red", True, no_color)
    else:
        colorprint("%s%s" % (indent, branch), "green", False, no_color)

    for child in [b for b in all_branches if upstreams[b] == branch]:
        visit(child, indent + "  ", all_branches, upstreams, current_branch, no_color)

def main(no_color):
    upstreams = {}

    all_branches = set()

    for branch in gitutils.branches():
        possible_upstream = gitutils.upstream(branch)
        upstream = possible_upstream if possible_upstream else NO_UPSTREAM

        all_branches.add(branch)
        all_branches.add(upstream)

        # Create upstream mappings
        upstreams[branch] = upstream
        if upstream not in upstreams:
            upstreams[upstream] = None

    current_branch = gitutils.current_branch()

    rootlist = [branch for branch in all_branches if upstreams[branch] == None]
    for root in rootlist:
        visit(root, "", all_branches, upstreams, current_branch, no_color)

if __name__ == "__main__":
    parser = argparse.ArgumentParser()
    parser.add_argument("--no-color", help="Turn off colored output", action="store_true")
    args = parser.parse_args()

    main(args.no_color)
